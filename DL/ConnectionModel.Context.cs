//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PVillaBusquedaLibrosEntities : DbContext
    {
        public PVillaBusquedaLibrosEntities()
            : base("name=PVillaBusquedaLibrosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Autor> Autor { get; set; }
        public virtual DbSet<Editorial> Editorial { get; set; }
        public virtual DbSet<Libro> Libro { get; set; }
    
        public virtual ObjectResult<AutorGetAll_Result> AutorGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AutorGetAll_Result>("AutorGetAll");
        }
    
        public virtual ObjectResult<EditorialGetAll_Result> EditorialGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EditorialGetAll_Result>("EditorialGetAll");
        }
    
        public virtual ObjectResult<GetAllAutor_Result> GetAllAutor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllAutor_Result>("GetAllAutor");
        }
    
        public virtual ObjectResult<GetAllBusFechaPub_Result> GetAllBusFechaPub(Nullable<int> fechaPublic)
        {
            var fechaPublicParameter = fechaPublic.HasValue ?
                new ObjectParameter("FechaPublic", fechaPublic) :
                new ObjectParameter("FechaPublic", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllBusFechaPub_Result>("GetAllBusFechaPub", fechaPublicParameter);
        }
    
        public virtual ObjectResult<GetAllBusqAutor_Result> GetAllBusqAutor(string nombreAutor, string autorAP, string autorAM)
        {
            var nombreAutorParameter = nombreAutor != null ?
                new ObjectParameter("NombreAutor", nombreAutor) :
                new ObjectParameter("NombreAutor", typeof(string));
    
            var autorAPParameter = autorAP != null ?
                new ObjectParameter("AutorAP", autorAP) :
                new ObjectParameter("AutorAP", typeof(string));
    
            var autorAMParameter = autorAM != null ?
                new ObjectParameter("AutorAM", autorAM) :
                new ObjectParameter("AutorAM", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllBusqAutor_Result>("GetAllBusqAutor", nombreAutorParameter, autorAPParameter, autorAMParameter);
        }
    
        public virtual ObjectResult<GetAllBusqTitulo_Result> GetAllBusqTitulo(string titulo)
        {
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllBusqTitulo_Result>("GetAllBusqTitulo", tituloParameter);
        }
    
        public virtual ObjectResult<GetAllEditorial_Result> GetAllEditorial()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllEditorial_Result>("GetAllEditorial");
        }
    
        public virtual int LibroDeleteAutor(Nullable<int> idLibro, Nullable<int> idAutor, Nullable<int> idEditorial)
        {
            var idLibroParameter = idLibro.HasValue ?
                new ObjectParameter("IdLibro", idLibro) :
                new ObjectParameter("IdLibro", typeof(int));
    
            var idAutorParameter = idAutor.HasValue ?
                new ObjectParameter("IdAutor", idAutor) :
                new ObjectParameter("IdAutor", typeof(int));
    
            var idEditorialParameter = idEditorial.HasValue ?
                new ObjectParameter("IdEditorial", idEditorial) :
                new ObjectParameter("IdEditorial", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LibroDeleteAutor", idLibroParameter, idAutorParameter, idEditorialParameter);
        }
    
        public virtual ObjectResult<LibroGetAll_Result> LibroGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroGetAll_Result>("LibroGetAll");
        }
    
        public virtual ObjectResult<LibroGetById_Result> LibroGetById(Nullable<int> idLibro)
        {
            var idLibroParameter = idLibro.HasValue ?
                new ObjectParameter("IdLibro", idLibro) :
                new ObjectParameter("IdLibro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroGetById_Result>("LibroGetById", idLibroParameter);
        }
    
        public virtual int LibroAdd(string titulo, Nullable<System.DateTime> fechaPublic, Nullable<int> idAutor, Nullable<int> idEditorial, string imagen, string descripticion)
        {
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var fechaPublicParameter = fechaPublic.HasValue ?
                new ObjectParameter("FechaPublic", fechaPublic) :
                new ObjectParameter("FechaPublic", typeof(System.DateTime));
    
            var idAutorParameter = idAutor.HasValue ?
                new ObjectParameter("IdAutor", idAutor) :
                new ObjectParameter("IdAutor", typeof(int));
    
            var idEditorialParameter = idEditorial.HasValue ?
                new ObjectParameter("IdEditorial", idEditorial) :
                new ObjectParameter("IdEditorial", typeof(int));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(string));
    
            var descripticionParameter = descripticion != null ?
                new ObjectParameter("Descripticion", descripticion) :
                new ObjectParameter("Descripticion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LibroAdd", tituloParameter, fechaPublicParameter, idAutorParameter, idEditorialParameter, imagenParameter, descripticionParameter);
        }
    
        public virtual int LibroUpdate(string titulo, Nullable<System.DateTime> fechaPublic, Nullable<int> idEditorial, Nullable<int> idAutor, Nullable<int> idLibro, string imagen, string descripcion)
        {
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var fechaPublicParameter = fechaPublic.HasValue ?
                new ObjectParameter("FechaPublic", fechaPublic) :
                new ObjectParameter("FechaPublic", typeof(System.DateTime));
    
            var idEditorialParameter = idEditorial.HasValue ?
                new ObjectParameter("IdEditorial", idEditorial) :
                new ObjectParameter("IdEditorial", typeof(int));
    
            var idAutorParameter = idAutor.HasValue ?
                new ObjectParameter("IdAutor", idAutor) :
                new ObjectParameter("IdAutor", typeof(int));
    
            var idLibroParameter = idLibro.HasValue ?
                new ObjectParameter("IdLibro", idLibro) :
                new ObjectParameter("IdLibro", typeof(int));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LibroUpdate", tituloParameter, fechaPublicParameter, idEditorialParameter, idAutorParameter, idLibroParameter, imagenParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<GetAllBusqEditorial_Result> GetAllBusqEditorial(string editorialN)
        {
            var editorialNParameter = editorialN != null ?
                new ObjectParameter("EditorialN", editorialN) :
                new ObjectParameter("EditorialN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllBusqEditorial_Result>("GetAllBusqEditorial", editorialNParameter);
        }
    
        public virtual ObjectResult<GetAllBusFechaPubAutor_Result> GetAllBusFechaPubAutor(string nombreAutor, string aP, Nullable<int> fechaPublic)
        {
            var nombreAutorParameter = nombreAutor != null ?
                new ObjectParameter("NombreAutor", nombreAutor) :
                new ObjectParameter("NombreAutor", typeof(string));
    
            var aPParameter = aP != null ?
                new ObjectParameter("AP", aP) :
                new ObjectParameter("AP", typeof(string));
    
            var fechaPublicParameter = fechaPublic.HasValue ?
                new ObjectParameter("FechaPublic", fechaPublic) :
                new ObjectParameter("FechaPublic", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllBusFechaPubAutor_Result>("GetAllBusFechaPubAutor", nombreAutorParameter, aPParameter, fechaPublicParameter);
        }
    }
}
